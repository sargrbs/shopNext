
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model User {
  id String @unique 
  name String
  email String @unique
  password String
  privilege String
  created_at DateTime @db.Date @default(now())
  updated_at DateTime @db.Date @updatedAt
}

model Token {
  id String @unique
  token String
  expireAt DateTime
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model ProductStock {
  id String @unique
  quantity Int

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  productVariations ProductVariations?

  productId String 
  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)
}

model Producterplink {
  id String @unique
  erp_code String?

  Product   Product? @relation(fields: [ProductId], references: [id])
  ProductId String?

  ProductVariations   ProductVariations? @relation(fields: [ProductVariationsId], references: [id])
  ProductVariationsId String?
  
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model ProductVariations {
  id String @unique
  name String
  code String
  web_erp_code String? @unique

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  productStockId String  @unique
  productStock ProductStock @relation(fields: [productStockId], references: [id], onDelete: Cascade)
  
  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId String

  auxs VariationtOnAux[]

  Producterplink Producterplink[]
}

model Aux {
  id String @unique
  code String
  name String
  group_name String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  variation VariationtOnAux[]
  products ProductOnAux[]
}

model VariationtOnAux {
  variation       ProductVariations   @relation(fields: [variationId], references: [id], onDelete: Cascade)
  variationId     String
  aux   Aux @relation(fields: [auxId], references: [id], onDelete: Cascade)
  auxId String
  assignedAt DateTime @default(now())
  assignedBy String

  @@id([variationId, auxId])
}


model ProductOnAux {
  product       Product   @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId     String
  aux   Aux @relation(fields: [auxId], references: [id], onDelete: Cascade)
  auxId String
  assignedAt DateTime @default(now())
  assignedBy String

  @@id([productId, auxId])
}

model Product {
  id String @unique
  code_default Int? @unique
  name String
  type Int?
  gtin String?
  nettWeight  Decimal?  @db.Decimal(15,2)	//peso liquido
  grossWeight Decimal?  @db.Decimal(15,2)	//peso bruto
  height Decimal?  @db.Decimal(15,2)
  width Decimal?  @db.Decimal(15,2)
  length Decimal?  @db.Decimal(15,2)
  currentsupply Decimal?  @db.Decimal(15,2)
  price Decimal?  @db.Decimal(15,2)
  detailurl String?
  urldetailstock String?
  urlpricetable String?
  urloffers String?
  urlpics String?

  web_erp_code String? @unique
  
  ProductVariations ProductVariations[]
  
  auxs ProductOnAux[]

  ProductStock ProductStock[]

  Producterplink Producterplink[]

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

